<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
         http://camel.apache.org/schema/spring
         http://camel.apache.org/schema/spring/camel-spring.xsd
         http://www.springframework.org/schema/task 
         http://www.springframework.org/schema/task/spring-task.xsd
         http://www.springframework.org/schema/context 
         http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.acc" />

	<!-- Database Connection for derby DB -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver" />
		<property name="url" value="jdbc:derby:C:\Users\khoyendra.pande\MyDB;create=true" />
		<property name="username" value="derby" />
		<property name="password" value="derby" />
	</bean>
	
	<!-- setup the Camel hibernate component -->
	<bean id="hibernate" class="org.apacheextras.camel.component.hibernate.HibernateComponent">
	  <property name="sessionFactory" ref="sessionFactory"/>
	  <property name="transactionStrategy" ref="springTransactionStrategy"/>
	</bean>
 
	<!-- setup hibernate and spring to use transaction -->
	<bean id="springTransactionStrategy" class="org.apacheextras.camel.component.hibernate.SpringTransactionStrategy">
	  <constructor-arg ref="sessionFactory"/>
	  <constructor-arg ref="transactionTemplate"/>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	  <property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
	  <property name="transactionManager" ref="transactionManager"/>
	</bean>
 
	<!-- setup Hibernate session factory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	  <property name="dataSource" ref="dataSource"/>
	  <!-- here we define the hibernate mapping files we use -->
	  <property name="mappingResources">
	    <list>
	      <value>com/acc/hibernate/hbm/Users.hbm.xml</value>
	    </list>
	  </property>
	  
	  <!-- <property name="mappingResources">
	    <list>
	      <value>com.acc.hibernate.pojo.Users</value>
	    </list>
	  </property> -->
	  
	  <!-- and here we have additional hibernate options -->
	  <property name="hibernateProperties">
	    <value>
	      hibernate.dialect=org.hibernate.dialect.DerbyTenSevenDialect
	      hibernate.hbm2ddl.auto=create
	    </value>
	  </property>
	</bean>
		
	<!-- user bean is our business logic bean that creates new users -->
	<bean id="userBean" class="com.acc.hibernate.dao.UserDao"/>
	 
	<camelContext xmlns="http://camel.apache.org/schema/spring">
	 
	  <!-- route that generate new users and insert them in the database -->
	  <route id="generateUsers-route">
	    <from uri="timer:foo?period=5s"/>
	    <transform>
	      <method ref="userBean" method="generateUser"/>
	    </transform>
	    <to uri="hibernate:com.acc.hibernate.pojo.Users"/>
	    <log message="Inserted new user ${body.id}"/>
	  </route>
	 
	  <!-- route that process the users by picking up new rows from the database
	       and when done processing then update the row to mark it as processed -->
	  <!-- <route id="processUsers-route">
	    <from uri="hibernate:com.acc.hibernate.pojo.Users?delay=1s"/>
	    <to uri="bean:userBean?method=processUser"/>
	    <log message="${body}"/>
	  </route> -->
	 
	</camelContext>


<bean id="client" class="com.acc.hibernate.CamelHibernateTestClient"/>
</beans>