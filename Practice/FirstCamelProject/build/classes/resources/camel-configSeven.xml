<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
         http://camel.apache.org/schema/spring
          http://camel.apache.org/schema/spring/camel-spring.xsd
          http://www.springframework.org/schema/task 
          http://www.springframework.org/schema/task/spring-task.xsd
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- sql connection -->
	<context:component-scan base-package="com.java" />
	<!-- this is the JDBC data source which uses an in-memory only Apache Derby 
		database -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/world" />
		<property name="username" value="root" />
		<property name="password" value="mysql" />
	</bean>

	<!-- configure the Camel SQL component to use the JDBC data source -->
	<bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<camel:camelContext>

		<camel:route>
		 <camel:from uri="timer://timer1?period=2s" />
            <camel:setBody>
                <camel:constant>
                   select id from city where countryCode='AFG' and district ='Kabol'
                </camel:constant>
            </camel:setBody>
            <camel:to uri="sql:dataSource" />
			<!-- <camel:from
				uri="sql:select id from city where countryCode='AFG' and district ='Kabol' "/>
			<camel:log message="${body[id]}" /> -->
			<camel:to uri="stream:out" />
		</camel:route>


	</camel:camelContext>



</beans>